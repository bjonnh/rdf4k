$dokka.format:html
$dokka.linkExtension:html
$dokka.location:net.nprod.rdf4k$get(org.eclipse.rdf4j.query.BindingSet, kotlin.String)net.nprod.rdf4k/org.eclipse.rdf4j.query.-binding-set/get.html
$dokka.location:net.nprod.rdf4k$map(org.eclipse.rdf4j.query.QueryResult((net.nprod.rdf4k.map.T)), kotlin.Function1((net.nprod.rdf4k.map.T, net.nprod.rdf4k.map.R)))net.nprod.rdf4k/org.eclipse.rdf4j.query.-query-result/map.html
$dokka.location:net.nprod.rdf4k$map(org.eclipse.rdf4j.repository.RepositoryResult((net.nprod.rdf4k.map.T)), kotlin.Function1((net.nprod.rdf4k.map.T, net.nprod.rdf4k.map.R)))net.nprod.rdf4k/org.eclipse.rdf4j.repository.-repository-result/map.html
$dokka.location:net.nprod.rdf4k$namedGraph(org.eclipse.rdf4j.model.util.ModelBuilder, kotlin.String, kotlin.Function1((org.eclipse.rdf4j.model.util.ModelBuilder, )))net.nprod.rdf4k/org.eclipse.rdf4j.model.util.-model-builder/named-graph.html
$dokka.location:net.nprod.rdf4k$namespace(org.eclipse.rdf4j.model.util.ModelBuilder, kotlin.String, kotlin.String)net.nprod.rdf4k/org.eclipse.rdf4j.model.util.-model-builder/namespace.html
$dokka.location:net.nprod.rdf4k$o#org.eclipse.rdf4j.model.Statementnet.nprod.rdf4k/org.eclipse.rdf4j.model.-statement/o.html
$dokka.location:net.nprod.rdf4k$p#org.eclipse.rdf4j.model.Statementnet.nprod.rdf4k/org.eclipse.rdf4j.model.-statement/p.html
$dokka.location:net.nprod.rdf4k$prefix(org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery, kotlin.String, org.eclipse.rdf4j.sparqlbuilder.rdf.Iri)net.nprod.rdf4k/org.eclipse.rdf4j.sparqlbuilder.core.query.-select-query/prefix.html
$dokka.location:net.nprod.rdf4k$s#org.eclipse.rdf4j.model.Statementnet.nprod.rdf4k/org.eclipse.rdf4j.model.-statement/s.html
$dokka.location:net.nprod.rdf4k$select(org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery, org.eclipse.rdf4j.sparqlbuilder.core.Variable, kotlin.Function1((org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery, )))net.nprod.rdf4k/org.eclipse.rdf4j.sparqlbuilder.core.query.-select-query/select.html
$dokka.location:net.nprod.rdf4k$subject(org.eclipse.rdf4j.model.util.ModelBuilder, kotlin.String, kotlin.Function1((org.eclipse.rdf4j.model.util.ModelBuilder, )))net.nprod.rdf4k/org.eclipse.rdf4j.model.util.-model-builder/subject.html
$dokka.location:net.nprod.rdf4k$subject(org.eclipse.rdf4j.model.util.ModelBuilder, org.eclipse.rdf4j.model.BNode, kotlin.Function1((org.eclipse.rdf4j.model.util.ModelBuilder, )))net.nprod.rdf4k/org.eclipse.rdf4j.model.util.-model-builder/subject.html
$dokka.location:net.nprod.rdf4k.examples.query$limit(org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery, kotlin.Int)net.nprod.rdf4k.examples.query/org.eclipse.rdf4j.sparqlbuilder.core.query.-select-query/limit.html
$dokka.location:net.nprod.rdf4k.examples.query$offset(org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery, kotlin.Int)net.nprod.rdf4k.examples.query/org.eclipse.rdf4j.sparqlbuilder.core.query.-select-query/offset.html
$dokka.location:net.nprod.rdf4k.examples.query$orderBy(org.eclipse.rdf4j.sparqlbuilder.core.query.SelectQuery, org.eclipse.rdf4j.sparqlbuilder.core.Variable)net.nprod.rdf4k.examples.query/org.eclipse.rdf4j.sparqlbuilder.core.query.-select-query/order-by.html
net.nprod.rdf4k
net.nprod.rdf4k.examples.function
net.nprod.rdf4k.examples.model
net.nprod.rdf4k.examples.model.vocabulary
net.nprod.rdf4k.examples.query
net.nprod.rdf4k.examples.repository
